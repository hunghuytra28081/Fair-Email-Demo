{
  "formatVersion": 1,
  "database": {
    "version": 6,
    "identityHash": "cd352e378e3d3ee88a5c87dda68a4f1e",
    "entities": [
      {
        "tableName": "identity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `name` TEXT NOT NULL, `email` TEXT NOT NULL, `replyto` TEXT, `account` INTEGER NOT NULL, `host` TEXT NOT NULL, `starttls` INTEGER NOT NULL, `insecure` INTEGER NOT NULL, `port` INTEGER NOT NULL, `user` TEXT NOT NULL, `password` TEXT NOT NULL, `auth_type` INTEGER NOT NULL, `primary` INTEGER NOT NULL, `color` INTEGER, `signature` TEXT, `synchronize` INTEGER NOT NULL, `store_sent` INTEGER NOT NULL, `sent_folder` INTEGER, `state` TEXT, `error` TEXT, FOREIGN KEY(`account`) REFERENCES `account`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "email",
            "columnName": "email",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "replyto",
            "columnName": "replyto",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "account",
            "columnName": "account",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "host",
            "columnName": "host",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "starttls",
            "columnName": "starttls",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "insecure",
            "columnName": "insecure",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "port",
            "columnName": "port",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "user",
            "columnName": "user",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "password",
            "columnName": "password",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "auth_type",
            "columnName": "auth_type",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "primary",
            "columnName": "primary",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "color",
            "columnName": "color",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "signature",
            "columnName": "signature",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "synchronize",
            "columnName": "synchronize",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "store_sent",
            "columnName": "store_sent",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "sent_folder",
            "columnName": "sent_folder",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "state",
            "columnName": "state",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "error",
            "columnName": "error",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "index_identity_account",
            "unique": false,
            "columnNames": [
              "account"
            ],
            "createSql": "CREATE  INDEX `index_identity_account` ON `${TABLE_NAME}` (`account`)"
          },
          {
            "name": "index_identity_account_email",
            "unique": false,
            "columnNames": [
              "account",
              "email"
            ],
            "createSql": "CREATE  INDEX `index_identity_account_email` ON `${TABLE_NAME}` (`account`, `email`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "account",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "account"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "account",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `name` TEXT, `signature` TEXT, `host` TEXT NOT NULL, `starttls` INTEGER NOT NULL, `insecure` INTEGER NOT NULL, `port` INTEGER NOT NULL, `user` TEXT NOT NULL, `password` TEXT NOT NULL, `auth_type` INTEGER NOT NULL, `synchronize` INTEGER NOT NULL, `primary` INTEGER NOT NULL, `color` INTEGER, `notify` INTEGER NOT NULL, `poll_interval` INTEGER NOT NULL, `created` INTEGER, `state` TEXT, `error` TEXT, `last_connected` INTEGER)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "signature",
            "columnName": "signature",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "host",
            "columnName": "host",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "starttls",
            "columnName": "starttls",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "insecure",
            "columnName": "insecure",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "port",
            "columnName": "port",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "user",
            "columnName": "user",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "password",
            "columnName": "password",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "auth_type",
            "columnName": "auth_type",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "synchronize",
            "columnName": "synchronize",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "primary",
            "columnName": "primary",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "color",
            "columnName": "color",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "notify",
            "columnName": "notify",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "poll_interval",
            "columnName": "poll_interval",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "created",
            "columnName": "created",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "state",
            "columnName": "state",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "error",
            "columnName": "error",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "last_connected",
            "columnName": "last_connected",
            "affinity": "INTEGER",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "folder",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `account` INTEGER, `name` TEXT NOT NULL, `type` TEXT NOT NULL, `synchronize` INTEGER NOT NULL, `sync_days` INTEGER NOT NULL, `keep_days` INTEGER NOT NULL, `display` TEXT, `hide` INTEGER NOT NULL, `unified` INTEGER NOT NULL, `state` TEXT, `error` TEXT, FOREIGN KEY(`account`) REFERENCES `account`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "account",
            "columnName": "account",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "synchronize",
            "columnName": "synchronize",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "sync_days",
            "columnName": "sync_days",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "keep_days",
            "columnName": "keep_days",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "display",
            "columnName": "display",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "hide",
            "columnName": "hide",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "unified",
            "columnName": "unified",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "state",
            "columnName": "state",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "error",
            "columnName": "error",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "index_folder_account_name",
            "unique": true,
            "columnNames": [
              "account",
              "name"
            ],
            "createSql": "CREATE UNIQUE INDEX `index_folder_account_name` ON `${TABLE_NAME}` (`account`, `name`)"
          },
          {
            "name": "index_folder_account",
            "unique": false,
            "columnNames": [
              "account"
            ],
            "createSql": "CREATE  INDEX `index_folder_account` ON `${TABLE_NAME}` (`account`)"
          },
          {
            "name": "index_folder_name",
            "unique": false,
            "columnNames": [
              "name"
            ],
            "createSql": "CREATE  INDEX `index_folder_name` ON `${TABLE_NAME}` (`name`)"
          },
          {
            "name": "index_folder_type",
            "unique": false,
            "columnNames": [
              "type"
            ],
            "createSql": "CREATE  INDEX `index_folder_type` ON `${TABLE_NAME}` (`type`)"
          },
          {
            "name": "index_folder_unified",
            "unique": false,
            "columnNames": [
              "unified"
            ],
            "createSql": "CREATE  INDEX `index_folder_unified` ON `${TABLE_NAME}` (`unified`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "account",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "account"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "message",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `account` INTEGER NOT NULL, `folder` INTEGER NOT NULL, `identity` INTEGER, `extra` TEXT, `replying` INTEGER, `forwarding` INTEGER, `uid` INTEGER, `msgid` TEXT, `references` TEXT, `deliveredto` TEXT, `inreplyto` TEXT, `thread` TEXT, `avatar` TEXT, `from` TEXT, `to` TEXT, `cc` TEXT, `bcc` TEXT, `reply` TEXT, `headers` TEXT, `subject` TEXT, `size` INTEGER, `content` INTEGER NOT NULL, `preview` TEXT, `sent` INTEGER, `received` INTEGER NOT NULL, `stored` INTEGER NOT NULL, `seen` INTEGER NOT NULL, `flagged` INTEGER NOT NULL, `ui_seen` INTEGER NOT NULL, `ui_flagged` INTEGER NOT NULL, `ui_hide` INTEGER NOT NULL, `ui_found` INTEGER NOT NULL, `ui_ignored` INTEGER NOT NULL, `error` TEXT, `last_attempt` INTEGER, FOREIGN KEY(`account`) REFERENCES `account`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`folder`) REFERENCES `folder`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`identity`) REFERENCES `identity`(`id`) ON UPDATE NO ACTION ON DELETE SET NULL , FOREIGN KEY(`replying`) REFERENCES `message`(`id`) ON UPDATE NO ACTION ON DELETE SET NULL , FOREIGN KEY(`forwarding`) REFERENCES `message`(`id`) ON UPDATE NO ACTION ON DELETE SET NULL )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "account",
            "columnName": "account",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "folder",
            "columnName": "folder",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "identity",
            "columnName": "identity",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "extra",
            "columnName": "extra",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "replying",
            "columnName": "replying",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "forwarding",
            "columnName": "forwarding",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "uid",
            "columnName": "uid",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "msgid",
            "columnName": "msgid",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "references",
            "columnName": "references",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "deliveredto",
            "columnName": "deliveredto",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "inreplyto",
            "columnName": "inreplyto",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "thread",
            "columnName": "thread",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "avatar",
            "columnName": "avatar",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "from",
            "columnName": "from",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "to",
            "columnName": "to",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "cc",
            "columnName": "cc",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "bcc",
            "columnName": "bcc",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "reply",
            "columnName": "reply",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "headers",
            "columnName": "headers",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "subject",
            "columnName": "subject",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "size",
            "columnName": "size",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "content",
            "columnName": "content",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "preview",
            "columnName": "preview",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "sent",
            "columnName": "sent",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "received",
            "columnName": "received",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "stored",
            "columnName": "stored",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "seen",
            "columnName": "seen",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "flagged",
            "columnName": "flagged",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ui_seen",
            "columnName": "ui_seen",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ui_flagged",
            "columnName": "ui_flagged",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ui_hide",
            "columnName": "ui_hide",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ui_found",
            "columnName": "ui_found",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ui_ignored",
            "columnName": "ui_ignored",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "error",
            "columnName": "error",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "last_attempt",
            "columnName": "last_attempt",
            "affinity": "INTEGER",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "index_message_account",
            "unique": false,
            "columnNames": [
              "account"
            ],
            "createSql": "CREATE  INDEX `index_message_account` ON `${TABLE_NAME}` (`account`)"
          },
          {
            "name": "index_message_folder",
            "unique": false,
            "columnNames": [
              "folder"
            ],
            "createSql": "CREATE  INDEX `index_message_folder` ON `${TABLE_NAME}` (`folder`)"
          },
          {
            "name": "index_message_identity",
            "unique": false,
            "columnNames": [
              "identity"
            ],
            "createSql": "CREATE  INDEX `index_message_identity` ON `${TABLE_NAME}` (`identity`)"
          },
          {
            "name": "index_message_replying",
            "unique": false,
            "columnNames": [
              "replying"
            ],
            "createSql": "CREATE  INDEX `index_message_replying` ON `${TABLE_NAME}` (`replying`)"
          },
          {
            "name": "index_message_forwarding",
            "unique": false,
            "columnNames": [
              "forwarding"
            ],
            "createSql": "CREATE  INDEX `index_message_forwarding` ON `${TABLE_NAME}` (`forwarding`)"
          },
          {
            "name": "index_message_folder_uid_ui_found",
            "unique": true,
            "columnNames": [
              "folder",
              "uid",
              "ui_found"
            ],
            "createSql": "CREATE UNIQUE INDEX `index_message_folder_uid_ui_found` ON `${TABLE_NAME}` (`folder`, `uid`, `ui_found`)"
          },
          {
            "name": "index_message_msgid_folder_ui_found",
            "unique": true,
            "columnNames": [
              "msgid",
              "folder",
              "ui_found"
            ],
            "createSql": "CREATE UNIQUE INDEX `index_message_msgid_folder_ui_found` ON `${TABLE_NAME}` (`msgid`, `folder`, `ui_found`)"
          },
          {
            "name": "index_message_thread",
            "unique": false,
            "columnNames": [
              "thread"
            ],
            "createSql": "CREATE  INDEX `index_message_thread` ON `${TABLE_NAME}` (`thread`)"
          },
          {
            "name": "index_message_received",
            "unique": false,
            "columnNames": [
              "received"
            ],
            "createSql": "CREATE  INDEX `index_message_received` ON `${TABLE_NAME}` (`received`)"
          },
          {
            "name": "index_message_ui_seen",
            "unique": false,
            "columnNames": [
              "ui_seen"
            ],
            "createSql": "CREATE  INDEX `index_message_ui_seen` ON `${TABLE_NAME}` (`ui_seen`)"
          },
          {
            "name": "index_message_ui_hide",
            "unique": false,
            "columnNames": [
              "ui_hide"
            ],
            "createSql": "CREATE  INDEX `index_message_ui_hide` ON `${TABLE_NAME}` (`ui_hide`)"
          },
          {
            "name": "index_message_ui_found",
            "unique": false,
            "columnNames": [
              "ui_found"
            ],
            "createSql": "CREATE  INDEX `index_message_ui_found` ON `${TABLE_NAME}` (`ui_found`)"
          },
          {
            "name": "index_message_ui_ignored",
            "unique": false,
            "columnNames": [
              "ui_ignored"
            ],
            "createSql": "CREATE  INDEX `index_message_ui_ignored` ON `${TABLE_NAME}` (`ui_ignored`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "account",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "account"
            ],
            "referencedColumns": [
              "id"
            ]
          },
          {
            "table": "folder",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "folder"
            ],
            "referencedColumns": [
              "id"
            ]
          },
          {
            "table": "identity",
            "onDelete": "SET NULL",
            "onUpdate": "NO ACTION",
            "columns": [
              "identity"
            ],
            "referencedColumns": [
              "id"
            ]
          },
          {
            "table": "message",
            "onDelete": "SET NULL",
            "onUpdate": "NO ACTION",
            "columns": [
              "replying"
            ],
            "referencedColumns": [
              "id"
            ]
          },
          {
            "table": "message",
            "onDelete": "SET NULL",
            "onUpdate": "NO ACTION",
            "columns": [
              "forwarding"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "attachment",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `message` INTEGER NOT NULL, `sequence` INTEGER NOT NULL, `name` TEXT, `type` TEXT NOT NULL, `cid` TEXT, `size` INTEGER, `progress` INTEGER, `available` INTEGER NOT NULL, FOREIGN KEY(`message`) REFERENCES `message`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "message",
            "columnName": "message",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "sequence",
            "columnName": "sequence",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "cid",
            "columnName": "cid",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "size",
            "columnName": "size",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "progress",
            "columnName": "progress",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "available",
            "columnName": "available",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "index_attachment_message",
            "unique": false,
            "columnNames": [
              "message"
            ],
            "createSql": "CREATE  INDEX `index_attachment_message` ON `${TABLE_NAME}` (`message`)"
          },
          {
            "name": "index_attachment_message_sequence",
            "unique": true,
            "columnNames": [
              "message",
              "sequence"
            ],
            "createSql": "CREATE UNIQUE INDEX `index_attachment_message_sequence` ON `${TABLE_NAME}` (`message`, `sequence`)"
          },
          {
            "name": "index_attachment_message_cid",
            "unique": true,
            "columnNames": [
              "message",
              "cid"
            ],
            "createSql": "CREATE UNIQUE INDEX `index_attachment_message_cid` ON `${TABLE_NAME}` (`message`, `cid`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "message",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "message"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "operation",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `folder` INTEGER NOT NULL, `message` INTEGER NOT NULL, `name` TEXT NOT NULL, `args` TEXT NOT NULL, `created` INTEGER NOT NULL, FOREIGN KEY(`folder`) REFERENCES `folder`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`message`) REFERENCES `message`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "folder",
            "columnName": "folder",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "message",
            "columnName": "message",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "args",
            "columnName": "args",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "created",
            "columnName": "created",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "index_operation_folder",
            "unique": false,
            "columnNames": [
              "folder"
            ],
            "createSql": "CREATE  INDEX `index_operation_folder` ON `${TABLE_NAME}` (`folder`)"
          },
          {
            "name": "index_operation_message",
            "unique": false,
            "columnNames": [
              "message"
            ],
            "createSql": "CREATE  INDEX `index_operation_message` ON `${TABLE_NAME}` (`message`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "folder",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "folder"
            ],
            "referencedColumns": [
              "id"
            ]
          },
          {
            "table": "message",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "message"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "answer",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `name` TEXT NOT NULL, `text` TEXT NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "text",
            "columnName": "text",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "log",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `time` INTEGER NOT NULL, `data` TEXT NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "time",
            "columnName": "time",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "data",
            "columnName": "data",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "index_log_time",
            "unique": false,
            "columnNames": [
              "time"
            ],
            "createSql": "CREATE  INDEX `index_log_time` ON `${TABLE_NAME}` (`time`)"
          }
        ],
        "foreignKeys": []
      }
    ],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, \"cd352e378e3d3ee88a5c87dda68a4f1e\")"
    ]
  }
}